[33mcommit 75f8c9b285e87f16bcf0ea2fb644f6b2161dbbe4[m
Author: gmlazutin <l4zutin.gleb@yandex.com>
Date:   Tue Oct 14 23:27:30 2025 +0300

    rename test script

[1mdiff --git a/lab_logdir_tests.sh b/lab_logdir_tests.sh[m
[1mdeleted file mode 100644[m
[1mindex 9186420..0000000[m
[1m--- a/lab_logdir_tests.sh[m
[1m+++ /dev/null[m
[36m@@ -1,172 +0,0 @@[m
[31m-#!/bin/bash[m
[31m-SCRIPT="./lrotate.sh"[m
[31m-WORKDIR="./.test_lab_dir"[m
[31m-TESTDIR="$WORKDIR/test_dir"[m
[31m-TMPFILE="$WORKDIR/_tmp_output.txt"[m
[31m-[m
[31m-if [ ! -f "$SCRIPT" ]; then[m
[31m-  echo "lrotate.sh not found"[m
[31m-  exit 2[m
[31m-fi[m
[31m-[m
[31m-mkdir -p "$WORKDIR"[m
[31m-[m
[31m-run_test() {[m
[31m-  local desc="$1"[m
[31m-  shift[m
[31m-  echo ">>> $desc"[m
[31m-  rm -rf "$TESTDIR"[m
[31m-  mkdir -p "$TESTDIR"[m
[31m-  "$SCRIPT" "$@" >"$TMPFILE" 2>&1[m
[31m-  local code=$?[m
[31m-  local output[m
[31m-  output=$(cat "$TMPFILE")[m
[31m-  if echo "$output" | grep -q "$expected"; then[m
[31m-    echo "PASSED"[m
[31m-  else[m
[31m-    echo "FAILED"[m
[31m-    echo "Got output:"[m
[31m-    echo "$output"[m
[31m-  fi[m
[31m-  echo[m
[31m-}[m
[31m-[m
[31m-# 1. No arguments[m
[31m-expected="Usage:"[m
[31m-run_test "Test 1: run without arguments (expect Usage error)"[m
[31m-[m
[31m-# 2. Only one argument[m
[31m-expected="Usage:"[m
[31m-run_test "Test 2: run with one argument (expect Usage error)" "$TESTDIR"[m
[31m-[m
[31m-# 3. Invalid LROTATE_NEEDED_PERCENTAGE (string instead of int)[m
[31m-export LROTATE_NEEDED_PERCENTAGE="abc"[m
[31m-expected="LROTATE_NEEDED_PERCENTAGE must be a positive integer"[m
[31m-run_test "Test 3: invalid environment variable" "$TESTDIR" 1000[m
[31m-unset LROTATE_NEEDED_PERCENTAGE[m
[31m-[m
[31m-# 4. Non-numeric size[m
[31m-expected="Size must be positive integer"[m
[31m-run_test "Test 4: non-numeric size" "$TESTDIR" "abc"[m
[31m-[m
[31m-# 5. Zero size[m
[31m-expected="Size must be positive integer"[m
[31m-run_test "Test 5: zero as size" "$TESTDIR" 0[m
[31m-[m
[31m-# 6. Empty path[m
[31m-expected="Path is empty"[m
[31m-run_test "Test 6: empty path" "" 1000[m
[31m-[m
[31m-# 7. Non-existent path[m
[31m-expected="Path does not exist"[m
[31m-run_test "Test 7: non-existent path" "/fake/path" 1000[m
[31m-[m
[31m-# 8. Path is file, not directory[m
[31m-mkdir -p "$TESTDIR"[m
[31m-echo "data" >"$TESTDIR/file"[m
[31m-expected="Path is not a directory"[m
[31m-run_test "Test 8: path is a file" "$TESTDIR/file" 1000[m
[31m-[m
[31m-# 9. Folder smaller than threshold[m
[31m-rm -rf "$TESTDIR"[m
[31m-mkdir -p "$TESTDIR"[m
[31m-dd if=/dev/zero of="$TESTDIR/smallfile" bs=1024 count=1 &>/dev/null[m
[31m-expected="No archivation needed"[m
[31m-run_test "Test 9: directory smaller than threshold" "$TESTDIR" 100000[m
[31m-[m
[31m-# 10. Folder exceeds threshold[m
[31m-rm -rf "$TESTDIR"[m
[31m-mkdir -p "$TESTDIR"[m
[31m-dd if=/dev/zero of="$TESTDIR/bigfile" bs=1024 count=80 &>/dev/null[m
[31m-expected="Archivation needed"[m
[31m-run_test "Test 10: directory exceeds threshold" "$TESTDIR" 1000  # ÑƒÐ¼ÐµÐ½ÑŒÑˆÐ¸Ð» size, Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ñ€ÐµÐ°Ð»ÑŒÐ½Ð¾ Ð¿Ñ€ÐµÐ²Ñ‹ÑˆÐ°Ð»Ð¾[m
[31m-[m
[31m-# 11. Folder size exactly equals threshold (>=)[m
[31m-rm -rf "$TESTDIR"[m
[31m-mkdir -p "$TESTDIR"[m
[31m-dd if=/dev/zero of="$TESTDIR/exact" bs=1 count=5000 &>/dev/null[m
[31m-export LROTATE_NEEDED_PERCENTAGE=50[m
[31m-expected="Archivation needed"[m
[31m-run_test "Test 11: size equals threshold" "$TESTDIR" 10000[m
[31m-unset LROTATE_NEEDED_PERCENTAGE[m
[31m-[m
[31m-# 12. Extended log message when env var unset[m
[31m-rm -rf "$TESTDIR"[m
[31m-mkdir -p "$TESTDIR"[m
[31m-export LROTATE_EXTENDED_LOG=true[m
[31m-unset LROTATE_NEEDED_PERCENTAGE[m
[31m-expected="extendedlog: LROTATE_NEEDED_PERCENTAGE is empty, using default percentage!"[m
[31m-run_test "Test 12: extended log message shown" "$TESTDIR" 1000[m
[31m-unset LROTATE_EXTENDED_LOG[m
[31m-[m
[31m-# 13. Valid custom percentage = 90 (no archivation)[m
[31m-rm -rf "$TESTDIR"[m
[31m-mkdir -p "$TESTDIR"[m
[31m-dd if=/dev/zero of="$TESTDIR/small" bs=1024 count=1 &>/dev/null[m
[31m-export LROTATE_NEEDED_PERCENTAGE=90[m
[31m-expected="No archivation needed"[m
[31m-run_test "Test 13: custom percentage = 90%" "$TESTDIR" 2000[m
[31m-unset LROTATE_NEEDED_PERCENTAGE[m
[31m-[m
[31m-# 14. Negative percentage[m
[31m-export LROTATE_NEEDED_PERCENTAGE=-5[m
[31m-expected="LROTATE_NEEDED_PERCENTAGE must be a positive integer"[m
[31m-run_test "Test 14: negative percentage value" "$TESTDIR" 2000[m
[31m-[m
[31m-# 15. Check that archived files are correct[m
[31m-TESTDIR=$(mktemp -d)[m
[31m-echo "log1" > "$TESTDIR/log1.txt"[m
[31m-echo "log2" > "$TESTDIR/log2.txt"[m
[31m-expected=""[m
[31m-run_test "Test 15: archive contains all original files" "$TESTDIR" 2000[m
[31m-[m
[31m-# Find created archive[m
[31m-archive_file=$(ls "$TESTDIR"/*.tar.gz 2>/dev/null | head -n 1)[m
[31m-if [ -z "$archive_file" ]; then[m
[31m-  echo "Test 15 failed: archive file not found!"[m
[31m-  exit 1[m
[31m-fi[m
[31m-[m
[31m-# Extract archive and check contents[m
[31m-mkdir -p extracted[m
[31m-tar -xzf "$archive_file" -C extracted[m
[31m-if [ ! -f extracted/log1.txt ] || [ ! -f extracted/log2.txt ]; then[m
[31m-  echo "Test 15 failed: archive does not contain all original files!"[m
[31m-  rm -rf extracted "$TESTDIR"[m
[31m-  exit 1[m
[31m-fi[m
[31m-[m
[31m-rm -rf extracted[m
[31m-echo "Test 15 passed!"[m
[31m-[m
[31m-# 16. Check that old logs are deleted after archiving[m
[31m-TESTDIR=$(mktemp -d)[m
[31m-echo "aaa" > "$TESTDIR/a.log"[m
[31m-echo "bbb" > "$TESTDIR/b.log"[m
[31m-expected=""[m
[31m-run_test "Test 16: old log files deleted after archiving" "$TESTDIR" 2000[m
[31m-[m
[31m-# Verify that .log files are deleted[m
[31m-remaining_logs=$(find "$TESTDIR" -type f -name "*.log" | wc -l)[m
[31m-if [ "$remaining_logs" -ne 0 ]; then[m
[31m-  echo "Test 16 failed: old log files were not deleted!"[m
[31m-  rm -rf "$TESTDIR"[m
[31m-  exit 1[m
[31m-fi[m
[31m-[m
[31m-# Verify that archive exists[m
[31m-archive_count=$(find "$TESTDIR" -type f -name "*.tar.gz" | wc -l)[m
[31m-if [ "$archive_count" -eq 0 ]; then[m
[31m-  echo "Test 16 failed: archive not created!"[m
[31m-  rm -rf "$TESTDIR"[m
[31m-  exit 1[m
[31m-fi[m
[31m-[m
[31m-echo "Test 16 passed!"[m
[31m-rm -rf "$TESTDIR"[m
[31m-[m
[31m-rm -rf "$WORKDIR"[m
[31m-rm -f "$TMPFILE"[m
[31m-unset LROTATE_EXTENDED_LOG[m
[31m-unset LROTATE_NEEDED_PERCENTAGE[m
[31m-[m
[1mdiff --git a/tests/lrotate_tests.sh b/tests/lrotate_tests.sh[m
[1mindex 6685d8c..9186420 100644[m
[1m--- a/tests/lrotate_tests.sh[m
[1m+++ b/tests/lrotate_tests.sh[m
[36m@@ -1,11 +1,11 @@[m
 #!/bin/bash[m
 SCRIPT="./lrotate.sh"[m
[31m-WORKDIR="./.test_lrotate_dir"[m
[32m+[m[32mWORKDIR="./.test_lab_dir"[m
 TESTDIR="$WORKDIR/test_dir"[m
 TMPFILE="$WORKDIR/_tmp_output.txt"[m
 [m
 if [ ! -f "$SCRIPT" ]; then[m
[31m-  echo "$SCRIPT not found"[m
[32m+[m[32m  echo "lrotate.sh not found"[m
   exit 2[m
 fi[m
 [m
[36m@@ -56,6 +56,7 @@[m [mrun_test "Test 5: zero as size" "$TESTDIR" 0[m
 # 6. Empty path[m
 expected="Path is empty"[m
 run_test "Test 6: empty path" "" 1000[m
[32m+[m
 # 7. Non-existent path[m
 expected="Path does not exist"[m
 run_test "Test 7: non-existent path" "/fake/path" 1000[m
[36m@@ -74,10 +75,11 @@[m [mexpected="No archivation needed"[m
 run_test "Test 9: directory smaller than threshold" "$TESTDIR" 100000[m
 [m
 # 10. Folder exceeds threshold[m
[32m+[m[32mrm -rf "$TESTDIR"[m
 mkdir -p "$TESTDIR"[m
 dd if=/dev/zero of="$TESTDIR/bigfile" bs=1024 count=80 &>/dev/null[m
 expected="Archivation needed"[m
[31m-run_test "Test 10: directory exceeds threshold" "$TESTDIR" 100000[m
[32m+[m[32mrun_test "Test 10: directory exceeds threshold" "$TESTDIR" 1000  # ÑƒÐ¼ÐµÐ½ÑŒÑˆÐ¸Ð» size, Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ñ€ÐµÐ°Ð»ÑŒÐ½Ð¾ Ð¿Ñ€ÐµÐ²Ñ‹ÑˆÐ°Ð»Ð¾[m
 [m
 # 11. Folder size exactly equals threshold (>=)[m
 rm -rf "$TESTDIR"[m
[36m@@ -86,13 +88,16 @@[m [mdd if=/dev/zero of="$TESTDIR/exact" bs=1 count=5000 &>/dev/null[m
 export LROTATE_NEEDED_PERCENTAGE=50[m
 expected="Archivation needed"[m
 run_test "Test 11: size equals threshold" "$TESTDIR" 10000[m
[32m+[m[32munset LROTATE_NEEDED_PERCENTAGE[m
 [m
 # 12. Extended log message when env var unset[m
 rm -rf "$TESTDIR"[m
 mkdir -p "$TESTDIR"[m
 export LROTATE_EXTENDED_LOG=true[m
[32m+[m[32munset LROTATE_NEEDED_PERCENTAGE[m
 expected="extendedlog: LROTATE_NEEDED_PERCENTAGE is empty, using default percentage!"[m
 run_test "Test 12: extended log message shown" "$TESTDIR" 1000[m
[32m+[m[32munset LROTATE_EXTENDED_LOG[m
 [m
 # 13. Valid custom percentage = 90 (no archivation)[m
 rm -rf "$TESTDIR"[m
[36m@@ -107,7 +112,6 @@[m [munset LROTATE_NEEDED_PERCENTAGE[m
 export LROTATE_NEEDED_PERCENTAGE=-5[m
 expected="LROTATE_NEEDED_PERCENTAGE must be a positive integer"[m
 run_test "Test 14: negative percentage value" "$TESTDIR" 2000[m
[31m-unset LROTATE_NEEDED_PERCENTAGE[m
 [m
 # 15. Check that archived files are correct[m
 TESTDIR=$(mktemp -d)[m
[36m@@ -134,8 +138,6 @@[m [mfi[m
 [m
 rm -rf extracted[m
 echo "Test 15 passed!"[m
[31m-rm -rf "$TESTDIR"[m
[31m-[m
 [m
 # 16. Check that old logs are deleted after archiving[m
 TESTDIR=$(mktemp -d)[m
